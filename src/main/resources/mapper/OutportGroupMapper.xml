<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcmy.dao.OutportGroupDao" >
  <resultMap id="BaseResultMap" type="com.vcmy.entity.OutPortGroup" >
    <id column="outPortGroupId" property="outPortGroupId" jdbcType="INTEGER" />
    <!-- 多对一的关系 多个出端口对一个策略-->
    <!-- column：指的是数据库队列名，property: 指的是属性名称, javaType：指的是属性的类型 -->
<!--    <association property="strategy" javaType="com.vcmy.entity.Strategy">
      <id column="strategyId" property="strategyId" jdbcType="INTEGER" />
      <result column="flowStatistics" property="flowStatistics" jdbcType="VARCHAR" />
    </association>-->
    <!-- 一对多的关系 一个出端口组有多个出端口-->
    <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
    <collection property="outPortGroup" ofType="com.vcmy.entity.Port">
      <result column="portId" property="portId" jdbcType="INTEGER" />
      <result column="portName" property="portName" jdbcType="VARCHAR" />
      <result column="state" property="state" jdbcType="VARCHAR" />
      <result column="description" property="description" jdbcType="VARCHAR" />
      <result column="type" property="type" jdbcType="INTEGER" />
      <result column="inPacket" property="inPacket" jdbcType="VARCHAR" />
      <result column="outPacket" property="outPacket" jdbcType="VARCHAR" />
      <result column="inRate" property="inRate" jdbcType="VARCHAR" />
      <result column="outRate" property="outRate" jdbcType="VARCHAR" />
      <result column="rate" property="rate" jdbcType="VARCHAR" />
    </collection>
    <!-- 一对多的关系 一个出端口组有多个规则-->
    <!-- property: 指的是集合属性的值, ofType：指的是集合中元素的类型 -->
    <collection property="ruleList" ofType="com.vcmy.entity.Rule">
      <id column="ruleId" property="ruleId" jdbcType="INTEGER" />
      <result column="vlanRange" property="vlanRange" jdbcType="INTEGER" />
      <result column="sourceMac" property="sourceMac" jdbcType="VARCHAR" />
      <result column="destinationMac" property="destinationMac" jdbcType="VARCHAR" />
      <result column="mplsLabel" property="mplsLabel" jdbcType="INTEGER" />
      <result column="mplsTc" property="mplsTc" jdbcType="INTEGER" />
      <result column="sourceIp" property="sourceIp" jdbcType="VARCHAR" />
      <result column="destinationIp" property="destinationIp" jdbcType="VARCHAR" />
      <result column="protocol" property="protocol" jdbcType="VARCHAR" />
      <result column="sourcePort" property="sourcePort" jdbcType="INTEGER" />
      <result column="destinationPort" property="destinationPort" jdbcType="INTEGER" />
      <result column="tcpFlag" property="tcpFlag" jdbcType="VARCHAR" />
      <result column="vlanAction" property="vlanAction" jdbcType="VARCHAR" />
      <result column="vlanId" property="vlanId" jdbcType="INTEGER" />
      <result column="mplsAction" property="mplsAction" jdbcType="VARCHAR" />
      <result column="mplsActionLabel" property="mplsActionLabel" jdbcType="INTEGER" />
      <result column="updateSourceIp" property="updateSourceIp" jdbcType="VARCHAR" />
      <result column="updateDestinationIp" property="updateDestinationIp" jdbcType="VARCHAR" />
      <result column="updateSourceMac" property="updateSourceMac" jdbcType="VARCHAR" />
      <result column="updateDestinationMac" property="updateDestinationMac" jdbcType="VARCHAR" />
      <result column="messageTruncate" property="messageTruncate" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    outPortGroupId, strategyId
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select * from
    (outportgroup_port,port,outportgroup
    left join rule
    on outportgroup.outPortGroupId=rule.outPortGroupId)
    <where>
      outportgroup.outPortGroupId=outportgroup_port.outPortGroupId
      and port.portId=outportgroup_port.portId
      <if test="outPortGroupId!=null">
        and outportgroup.outPortGroupId = #{outPortGroupId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from outportgroup
    where outPortGroupId = #{outPortGroupId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vcmy.entity.OutPortGroup" >
    insert into outportgroup (outPortGroupId, strategyId
      )
    values (#{outPortGroupId,jdbcType=INTEGER}, #{strategyId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="outPortGroup.outPortGroupId" keyColumn="outPortGroupId">
    insert into outportgroup
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outPortGroup.outPortGroupId != null" >
        outPortGroupId,
      </if>
      <if test="strategyId != null" >
        strategyId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outPortGroup.outPortGroupId != null" >
        #{outPortGroup.outPortGroupId,jdbcType=INTEGER},
      </if>
      <if test="strategyId != null" >
        #{strategyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcmy.entity.OutPortGroup" >
    update outportgroup
    <set >
      <if test="strategyId != null" >
        strategyId = #{strategyId,jdbcType=INTEGER},
      </if>
    </set>
    where outPortGroupId = #{outPortGroupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcmy.entity.OutPortGroup" >
    update outportgroup
    set strategyId = #{strategyId,jdbcType=INTEGER}
    where outPortGroupId = #{outPortGroupId,jdbcType=INTEGER}
  </update>
</mapper>