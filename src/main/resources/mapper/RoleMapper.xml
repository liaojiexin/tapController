<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vcmy.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.vcmy.entity.Role" >
    <id column="roleId" property="roleId" jdbcType="INTEGER" />
    <result column="roleName" property="roleName" jdbcType="VARCHAR" />
    <result column="createBy" property="createBy" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    roleId, roleName, createBy, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where roleId = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.vcmy.entity.Role" >
    insert into sys_role (roleId, roleName, createBy, 
      createTime, updateTime)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vcmy.entity.Role" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        roleId,
      </if>
      <if test="roleName != null" >
        roleName,
      </if>
      <if test="createBy != null" >
        createBy,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
        createTime
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
        sysdate()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vcmy.entity.Role" >
    update sys_role
    <set >
      <if test="roleName != null" >
        roleName = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null" >
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
        updateTime = sysdate()
    </set>
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vcmy.entity.Role" >
    update sys_role
    set roleName = #{roleName,jdbcType=VARCHAR},
      createBy = #{createBy,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where roleId = #{roleId,jdbcType=INTEGER}
  </update>

  <select id="selectRoleList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" /> from sys_role
    <where>
      <if test="searchValue != null and searchValue != ''">
        AND roleName like concat('%',#{searchValue},'%')
      </if>
    </where>
  </select>
  
  <select id="selectRoleName" parameterType="String" resultType="int">
    select count(1) from sys_role where roleName=#{roleName}
  </select>
</mapper>